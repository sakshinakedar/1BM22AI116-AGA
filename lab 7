import pandas as pd
import numpy as np
from sklearn.preprocessing import MinMaxScaler
from sklearn.neural_network import BernoulliRBM
from sklearn.linear_model import LogisticRegression
from sklearn.pipeline import Pipeline
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score, classification_report
from sklearn.manifold import TSNE
import matplotlib.pyplot as plt

url = "https://archive.ics.uci.edu/ml/machine-learning-databases/wine-quality/winequality-red.csv"
df = pd.read_csv(url, sep=';')
labels = df['quality'].values
features = df.drop(columns='quality').values

scaler = MinMaxScaler()
features_scaled = scaler.fit_transform(features)

X_train, X_test, y_train, y_test = train_test_split(features_scaled, labels, test_size=0.2, random_state=42, stratify=labels)

rbm1 = BernoulliRBM(n_components=64, learning_rate=0.05, n_iter=20, random_state=0, verbose=True)
rbm2 = BernoulliRBM(n_components=32, learning_rate=0.05, n_iter=20, random_state=0, verbose=True)
logistic = LogisticRegression(max_iter=1000)
H1_train = rbm1.fit_transform(X_train)
H2_train = rbm2.fit_transform(H1_train)
logistic.fit(H2_train, y_train)

H1_test = rbm1.transform(X_test)
H2_test = rbm2.transform(H1_test)
y_pred = logistic.predict(H2_test)

accuracy = accuracy_score(y_test, y_pred)
print(f"Accuracy on test set: {accuracy:.4f}")
print("\nClassification Report:\n", classification_report(y_test, y_pred))

tsne = TSNE(n_components=2, random_state=42)
tsne_proj = tsne.fit_transform(H2_test)

plt.figure(figsize=(8, 6))
scatter = plt.scatter(tsne_proj[:, 0], tsne_proj[:, 1], c=y_test, cmap='viridis', s=20)
plt.colorbar(scatter, label='Wine Quality')
plt.title("t-SNE of Learned RBM Features")
plt.xlabel("t-SNE dim 1")
plt.ylabel("t-SNE dim 2")
plt.show()
